RESETTING THE DATABASE

If you need to reset the database, then run this command in the SportsStore folder:

...
dotnet ef database drop --force --context StoreDbContext
...

Start ASP.NET Core, and the database will be re-created and seeded with data.

Displaying a List of Products

As you have seen, the initial preparation work for an ASP.NET Core project can take some time. 
But the good news is that once the foundation is in place, the pace improves, and features 
are added more rapidly. In this section, I am going to create a controller and an action method 
that can display details of the products in the repository.

USING THE VISUAL STUDIO SCAFFOLDING

As I noted in Chapter 4, Visual Studio supports scaffolding to add items to a project.

I don’t use scaffolding in this book. The code and markup that the scaffolding generates 
are so generic as to be all but useless, and the scenarios that are supported are narrow 
and don’t address common development problems. My goal in this book is not only to make 
sure you know how to create ASP.NET Core applications but also to explain how everything 
works behind the scenes, and that is harder to do when responsibility for creating 
components is handed to the scaffolding.

If you are using Visual Studio, add items to the project by right-clicking a folder 
in the Solution Explorer, selecting Add ➤ New Item from the pop-up menu, and then choosing 
an item template from the Add New Item window.

You may find your development style to be different from mine, and you may find that you prefer
working with the scaffolding in your own projects. That’s perfectly reasonable, although 
I recommend you take the time to understand what the scaffolding does so you know where 
to look if you don’t get the results you expect.

Preparing the Controller

Add the statements shown in Listing 7-24 to prepare the controller to display the list of products.

Listing 7-24. Preparing the Controller in the HomeController.cs File 
in the SportsStore/Controllers Folder

using Microsoft.AspNetCore.Mvc;
using SportsStore.Models;

namespace SportsStore.Controllers {
	public class HomeController : Controller {
		private IStoreRepository repository;
		public HomeController(IStoreRepository repo) {
			repository = repo;
		}

		public IActionResult Index() => View(repository.Products);
	}
}